/* --- media-query mixin --- */
@mixin mobile {
  @media (min-width: map-get($breakpoints, 'xs')) {
    @content;
  }
}

@mixin mobile-l {
  @media (min-width: map-get($breakpoints, 'sm')) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: map-get($breakpoints, 'lg')) {
    @content;
  }
}

@mixin tablet-l {
  @media (min-width: map-get($breakpoints, 'xl')) {
    @content;
  }
}

@mixin note-book {
  @media (min-width: map-get($breakpoints, 'xxl')) {
    @content;
  }
}
/* --- media-query mixin End --- */

/* --- margin & padding mixin --- */
@mixin padding($space, $type: all) {
  @if $type == 'all' {
    padding: map-get($spacing, $space);
  } @else if $type == 'x' {
    padding: 0 map-get($spacing, $space);
  } @else if $type == 'y' {
    padding: map-get($spacing, $space) 0;
  } @else if $type == 'top' {
    padding-top: map-get($spacing, $space);
  } @else if $type == 'right' {
    padding-right: map-get($spacing, $space);
  } @else if $type == 'bottom' {
    padding-bottom: map-get($spacing, $space);
  } @else if $type == 'left' {
    padding-left: map-get($spacing, $space);
  }
}

@mixin padding-2($space-y, $space-x) {
  padding: map-get($spacing, $space-y) map-get($spacing, $space-x);
}

@mixin margin($space, $type: all) {
  @if $type == 'all' {
    margin: map-get($spacing, $space);
  } @else if $type == 'x' {
    margin: 0 map-get($spacing, $space);
  } @else if $type == 'y' {
    margin: map-get($spacing, $space) 0;
  } @else if $type == 'top' {
    margin-top: map-get($spacing, $space);
  } @else if $type == 'right' {
    margin-right: map-get($spacing, $space);
  } @else if $type == 'bottom' {
    margin-bottom: map-get($spacing, $space);
  } @else if $type == 'left' {
    margin-left: map-get($spacing, $space);
  }
}

@mixin margin-2($space-y, $space-x) {
  margin: map-get($spacing, $space-y) map-get($spacing, $space-x);
}
/* --- margin & padding mixin End --- */

@mixin flex-center {
  align-items: center;
  display: flex;
  justify-content: center;
}
